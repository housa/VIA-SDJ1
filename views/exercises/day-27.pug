extends layout

block header
  h2 Course page for: #[strong SDJ1]

block content
  section.column.small-12
    h2 Exercise 27.01
    p Draw sequence diagrams for the following scenarios:
    ol(type="a")
      li Buying a meal in the canteen
      li A course instructor creating a test and adding a question to it

    h2 Exercise 27.02
    p.
      Look at the #[tt Circle] class from the slides from day 26. Draw a sequence
      diagram of the objects and method calls involved when (in a main method) you
      get the center of a #[tt Circle] object, and afterwards move the #[tt Circle] object.

    h2 Exercise 27.03
    p.
      Write a program that asks the users to input names of all their friends. The program should
      write all the names to a file specified. The first keyboard input is the name of the file and
      the following inputs are names of friends. To finish the keyboard input type DONE. Then
      try to open the file using Notepad to see its content.

    p An example run could be the following (bold text is user input):

    pre.stdout.
      Type filename: <b>friends.txt</b>
      Type name of friend: <b>Bob</b>
      Type name of friend: <b>Carl</b>
      Type name of friend: <b>Dave</b>
      Type name of friend: <b>DONE</b>
    p Now the file “friends.txt” should contain the following:
    pre.stdout.
      Bob
      Carl
      Dave

    h2 Exercise 27.04
    p.
      Write a program that can read and print out all contents of any text file. The program
      should ask the user for the name of a text file, open this file and then print out every line
      from the file.

    p.
      If the file is “friends.txt” from the previous exercise (if that’s what you called the file) the
      output could be:
    pre.stdout.
      Contents of the file friends.txt:
      Bob
      Carl
      Dave

    h2 Exercise 27.05
    p.
      Implement a program that generates some random integers and writes them to a binary file.
      First the program should ask the user to input how many integers it should make.
    p.
      Then implement another program that can read the binary file and print its contents to the
      screen.

    h2 Exercise 27.06
    p.
      Create a class #[tt Student], as shown in the class diagram below. The class should be
      serializable so that objects made from it can be saved in binary files (just add
      #[tt implements Serializable] in the class definition).
    object(data="/static/images/Student28.svg", type="image/svg+xml")
    p.
      Now create a test class that creates some #[tt Student] objects and saves them to a binary file.
      Afterwards create another test class that can read the created file and print out the
      information about the students. You can also do both in the same test class if you prefer.
