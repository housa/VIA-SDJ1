extends layout

block content
  section
    h2 Software Development with UML and Java
    i Day 1
  section
    h2 Agenda
    ul
      li Books
      li Eclipse and Java
      li About the course
      li Exercises
  section
    h2 Books
    ul
      li We should pick them up at the library at ????
  section
    h2 Eclipse
    ul
      li Links to download/install the software can be found on the course page in the notes for today
  section
    h2 About the course
    ul
      li Main purpose
      li Goals
      li Topics
      li Teaching methods & study activity
      li Examination
  section
    h2 Main purpose
    p.
      The main purpose of the course is to provide students with the qualifications needed to understand the core
      concepts and techniques of object-oriented system development and programming
  section
    h2 Goals
    ul
      li Having completed this course, students should be able to:
        ul
          li Master and use the basic object-oriented concepts, including relationships, collaboration and polymorphism
          li Analyse/design and describe small software systems with UML according to the object-oriented method
          li Demonstrate the knowledge of documentation of analysis and design
          li Implement smaller programs in Java with file IO persistence
          li Implement smaller programs in Java including simple GUIs
          li Implement smaller systems from a UML design
          li Use best practices for writing and documenting Java source code
  section
    h2 Topics
    div.split-2-left
      h5 Java Programming:
      ul
        li Basics of Java
        li Classes and Objects
        li Inheritance
        li Arrays and ArrayList Collections
        li Exceptions
        li File IO
        li GUI programming

    div.split-2-right
      h5 UML:
      ul
        li Class diagrams
        li Activity diagrams
        li Sequence diagrams
  section
    h2 Teaching methods & study activity
    ul
      li Lessons are a mix of presentation of theory/examples and students working on exercises
      li A number of tests and assignments will be given during the course
      li Required workload for students is estimated at 300 hours where approximately two thirds are self-study, including exercises and preparing for the examination
  section
    h2 Examination
    ul
      li 25% of the grade comes from a special test conducted in the middle of the course, 75% comes from the regular examination at the end of the course
      li The time allotted for the examination is 30 minutes including assessment
        ul
          li The student will pick an unfamiliar programming exercise at random
          li The student must explain the UML involved and demonstrate how to perform the programming task using a laptop and/or the blackboard
      li To register for the examination, the student must show an attendance of 75% of the lessons during the semester
  section
    h2 Learning to program
    ul
      li Sometimes knowing the theory is not enough, it also takes (a lot of) practice
      li No one gets good at programming only by reading about it
      li When learning to program, reading the book is good
      li Spending time on actual programming is even better
        ul
          li But read the book as well, you need the theory to be able to make good and efficient programs. One that works is just not good enough.
      li Most classes will be a little theory, and a lot of programming
        ul
          li Showing up for the classes and getting all that time for programming is a very very good idea!
  section
    h2 Exercises
    ul
      li Can be found on the course page under exercises